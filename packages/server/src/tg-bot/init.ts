import TelegramApi, { Message } from "node-telegram-bot-api";
import { tgBotEventErrorHandler } from "../utils/event-error-handler";
import { dbInstance } from "../database/init";
import { UserEntity } from "../database/entities/user.entity";
import chalk from "chalk";

const TG_BOT_TOKEN = process.env.TG_BOT_TOKEN || "";

if (!TG_BOT_TOKEN) {
  throw new Error("No bot token provided");
}

// singleton
export class TgBotService {
  private static instance: TgBotService;
  private readonly bot: TelegramApi;

  constructor() {
    this.bot = new TelegramApi(TG_BOT_TOKEN, { polling: true });
    this.handleEvents();
    console.log(chalk.blue("Tg bot instance created"));
  }

  public static getInstance(): TgBotService {
    if (!TgBotService.instance) {
      TgBotService.instance = new TgBotService();
    }
    return TgBotService.instance;
  }

  public get getBot() {
    return this.bot;
  }

  private handleEvents = () => {
    this.bot.on(
      "message",
      tgBotEventErrorHandler("message", async (msg: Message) => {
        const text = msg.text;
        const chatId = msg.chat.id;
        const user = msg.from;

        if (text === "/start") {
          if (!user) {
            return this.bot.sendMessage(
              chatId,
              "–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º @privetenn",
            );
          }

          const dbUser = await dbInstance
            .getRepository(UserEntity)
            .findOneBy({ username: user.username });

          if (!dbUser) {
            return this.bot.sendMessage(
              chatId,
              "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º @Roman_Comandorb",
            );
          }

          // TODO: –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
          return this.bot.sendMessage(
            chatId,
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Way-to-Bot, –®–ê–•–ú–ê–¢–Æ–ì–ê! ‚ôü‚ôôÔ∏è\n" +
              "\n" +
              '–ü–µ—Ä–µ—Ö–æ–¥–∏ –≤ –Ω–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ "WAY TO BOT" ‚ôõ\n' +
              '–∏–ª–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è" ‚ôû\n' +
              "\n" +
              "–¢–∞–º —Ç—ã –Ω–∞–π–¥–µ—à—å –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö/—Ç–µ–∫—É—â–∏—Ö/–ø—Ä–æ—à–µ–¥—à–∏—Ö —Å–æ–±—ã—Ç–∏—è—Ö, —Å–º–æ–∂–µ—à—å –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—á–∞—Å—Ç–∏–µ –∏ –æ—Å–≤–µ–∂–∏—Ç—å –≤ –ø–∞–º—è—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç—É—Ä–Ω–∏—Ä–∞ üèÜ. –í—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≤–æ–∏—Ö —É—Å–ø–µ—Ö–∞—Ö —Å–º–æ—Ç—Ä–∏ –≤–æ –≤–∫–ª–∞–¥–∫–µ –ø—Ä–æ—Ñ–∏–ª—è ü•áü•àü•â.\n" +
              "\n" +
              "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –∏–¥–µ–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è —É ‚ôö @Roman_Comandorb.\n" +
              "–í —Å–ª—É—á–∞–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –Ω–µ–ø–æ–ª–∞–¥–æ–∫ –≤ —Ä–∞–±–æ—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏ üë®üèº‚Äçüíª@privetenn üßëüèº‚Äçüíª@Traktirwik.",
          );
        }
      }),
    );
  };
}
