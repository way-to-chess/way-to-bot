user nginx;
worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    access_log /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log notice;

    upstream server_app {
        server app:3000;
        keepalive 32;
    }

    client_max_body_size 100M;

    server {
        listen 80;
        listen [::]:80;
        server_name waytochess.site;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        http2 on;
        server_name waytochess.site;

        ssl_certificate /etc/nginx/ssl/live/waytochess.site/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/live/waytochess.site/privkey.pem;

        error_page 503 /service-temporary-unavailable;

        location /service-temporary-unavailable {
            alias /usr/share/nginx/html/service_unavailable;
            index index.html;
            try_files $uri $uri/ /service_unavailable/index.html;
        }

        location / {
            root /usr/share/nginx/html/webapp;
            index index.html;
            try_files $uri $uri/ /index.html =503;
            add_header Cache-Control no-cache;
        }

        location /admin {
            alias /usr/share/nginx/html/admin;
            index index.html;
            try_files $uri $uri/ /admin/index.html;
            add_header Cache-Control no-cache;
        }

        location /admin/assets {
            alias /usr/share/nginx/html/admin/assets;
            try_files $uri =404;
            expires 1y;
            add_header Cache-Control no-cache;
        }

        location /api {
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE, PATCH";
                add_header Access-Control-Allow-Headers "Authorization, Content-Type";
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
            proxy_pass http://server_app;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        location ~ ^/api/(client|admin)/file {
            client_max_body_size 1000M;
            proxy_pass http://server_app;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        location /uploads {
            alias /usr/share/nginx/html/uploads;
        }
    }
}
